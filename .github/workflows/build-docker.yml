name: Build and Push to ECR

on:
  push:
    branches: [ main ]

permissions:
  id-token: write
  contents: read

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::150301572911:role/github-oidc-provider-aws
        role-session-name: push-to-ecr
        aws-region: us-east-1

    - name: Login to Amazon ECR Public
      id: login-ecr-public
      uses: aws-actions/amazon-ecr-login@v2
      with:
        registry-type: public
    - uses: DeterminateSystems/nix-installer-action@main
    - uses: DeterminateSystems/magic-nix-cache-action@main
    - uses: DeterminateSystems/flake-checker-action@main
    - name: Build, tag, and push docker image to Amazon ECR Public
      env:
        IMAGE_TAG: ${{ github.sha }}
        VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        VERCEL_ORG_ID: team_QReBIZfC9Npefbffo6mPT3qO
      run: |
        ./envs.sh
        # format the .env file to be used as build args
        # remove comments and empty lines
        sed -i '/^$/d' .env
        sed -i '/^#/d' .env

        docker build -t public.ecr.aws/t7q1f7c9/flakery:$IMAGE_TAG $(for i in `cat .env`; do out+="--build-arg $i " ; done; echo $out;out="") .
        docker build -t public.ecr.aws/t7q1f7c9/flakery:latest $(for i in `cat .env`; do out+="--build-arg $i " ; done; echo $out;out="") .
        docker push public.ecr.aws/t7q1f7c9/flakery:$IMAGE_TAG
        docker push public.ecr.aws/t7q1f7c9/flakery:latest